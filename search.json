[
  {
    "objectID": "assignment03-JulioVargasGarcia.html",
    "href": "assignment03-JulioVargasGarcia.html",
    "title": "Assignment 03",
    "section": "",
    "text": "from pyspark.sql import SparkSession\nfrom pyspark.sql import functions as F\nfrom pyspark.sql.functions import col, split, explode, regexp_replace, transform, when\nfrom pyspark.sql.functions import col, monotonically_increasing_id\nfrom pyspark.sql.types import StructType  # to/from JSON\n\nimport json\nimport re\nimport numpy as np\nimport pandas as pd\n\nimport plotly.express as px\nimport plotly.io as pio\nimport plotly.graph_objects as go\n\n\nnp.random.seed(30)  # set a fixed seed for reproducibility\npio.renderers.default = \"vscode+notebook\"   #\n# Initialize Spark Session\nspark = SparkSession.builder.appName(\"JobPostingsAnalysis\").getOrCreate()\n# Load schema from JSON file\nwith open(\"data/schema_lightcast.json\") as f:\n    schema = StructType.fromJson(json.load(f))\n\n# Load Data\ndf = (spark.read\n      .option(\"header\", \"true\")\n      .option(\"inferSchema\", \"false\")\n      .schema(schema)              # saved schema\n      .option(\"multiLine\", \"true\")\n      .option(\"escape\", \"\\\"\")\n      .csv(\"data/lightcast_job_postings.csv\")\n      )\n\ndf.createOrReplaceTempView(\"job_postings\")\n# Show Schema and Sample Data\n#df.printSchema()  \ndf.show(5)\ndf.count()\n\nn|                  ID|LAST_UPDATED_DATE|LAST_UPDATED_TIMESTAMP|DUPLICATES|  POSTED|  EXPIRED|DURATION|        SOURCE_TYPES|             SOURCES|                 URL|ACTIVE_URLS|ACTIVE_SOURCES_INFO|           TITLE_RAW|                BODY|MODELED_EXPIRED|MODELED_DURATION| COMPANY|        COMPANY_NAME|COMPANY_RAW|COMPANY_IS_STAFFING|EDUCATION_LEVELS|EDUCATION_LEVELS_NAME|MIN_EDULEVELS| MIN_EDULEVELS_NAME|MAX_EDULEVELS|MAX_EDULEVELS_NAME|EMPLOYMENT_TYPE|EMPLOYMENT_TYPE_NAME|MIN_YEARS_EXPERIENCE|MAX_YEARS_EXPERIENCE|IS_INTERNSHIP|SALARY|REMOTE_TYPE|REMOTE_TYPE_NAME|ORIGINAL_PAY_PERIOD|SALARY_TO|SALARY_FROM|            LOCATION|                CITY|    CITY_NAME|COUNTY|   COUNTY_NAME|  MSA|            MSA_NAME|STATE|STATE_NAME|COUNTY_OUTGOING|COUNTY_NAME_OUTGOING|COUNTY_INCOMING|COUNTY_NAME_INCOMING|MSA_OUTGOING|   MSA_NAME_OUTGOING|MSA_INCOMING|   MSA_NAME_INCOMING|NAICS2|         NAICS2_NAME|NAICS3|         NAICS3_NAME|NAICS4|         NAICS4_NAME|NAICS5|         NAICS5_NAME|NAICS6|         NAICS6_NAME|             TITLE|         TITLE_NAME|         TITLE_CLEAN|              SKILLS|         SKILLS_NAME|  SPECIALIZED_SKILLS|SPECIALIZED_SKILLS_NAME|      CERTIFICATIONS| CERTIFICATIONS_NAME|       COMMON_SKILLS|  COMMON_SKILLS_NAME|     SOFTWARE_SKILLS|SOFTWARE_SKILLS_NAME|      ONET|           ONET_NAME| ONET_2019|      ONET_2019_NAME|                CIP6|           CIP6_NAME|                CIP4|           CIP4_NAME|                CIP2|           CIP2_NAME|SOC_2021_2|     SOC_2021_2_NAME|SOC_2021_3|     SOC_2021_3_NAME|SOC_2021_4|SOC_2021_4_NAME|SOC_2021_5|SOC_2021_5_NAME|LOT_CAREER_AREA|LOT_CAREER_AREA_NAME|LOT_OCCUPATION| LOT_OCCUPATION_NAME|LOT_SPECIALIZED_OCCUPATION|LOT_SPECIALIZED_OCCUPATION_NAME|LOT_OCCUPATION_GROUP|LOT_OCCUPATION_GROUP_NAME|LOT_V6_SPECIALIZED_OCCUPATION|LOT_V6_SPECIALIZED_OCCUPATION_NAME|LOT_V6_OCCUPATION|LOT_V6_OCCUPATION_NAME|LOT_V6_OCCUPATION_GROUP|LOT_V6_OCCUPATION_GROUP_NAME|LOT_V6_CAREER_AREA|LOT_V6_CAREER_AREA_NAME|  SOC_2|          SOC_2_NAME|  SOC_3|          SOC_3_NAME|  SOC_4|     SOC_4_NAME|  SOC_5|     SOC_5_NAME|LIGHTCAST_SECTORS|LIGHTCAST_SECTORS_NAME|NAICS_2022_2|   NAICS_2022_2_NAME|NAICS_2022_3|   NAICS_2022_3_NAME|NAICS_2022_4|   NAICS_2022_4_NAME|NAICS_2022_5|   NAICS_2022_5_NAME|NAICS_2022_6|   NAICS_2022_6_NAME|\nn|1f57d95acf4dc67ed...|         9/6/2024|  2024-09-06 20:32:...|         0|6/2/2024| 6/8/2024|       6|   [\\n  \"Company\"\\n]|[\\n  \"brassring.c...|[\\n  \"https://sjo...|         []|               NULL|Enterprise Analys...|31-May-2024\\n\\nEn...|       6/8/2024|               6|  894731|          Murphy USA| Murphy USA|              false|       [\\n  2\\n]| [\\n  \"Bachelor's ...|            2|  Bachelor's degree|         NULL|              NULL|              1|Full-time (&gt; 32 h...|                   2|                   2|        false|  NULL|          0|          [None]|               NULL|     NULL|       NULL|{\\n  \"lat\": 33.20...|RWwgRG9yYWRvLCBBUg==|El Dorado, AR|  5139|     Union, AR|20980|       El Dorado, AR|    5|  Arkansas|           5139|           Union, AR|           5139|           Union, AR|       20980|       El Dorado, AR|       20980|       El Dorado, AR|    44|        Retail Trade|   441|Motor Vehicle and...|  4413|Automotive Parts,...| 44133|Automotive Parts ...|441330|Automotive Parts ...|ET29C073C03D1F86B4|Enterprise Analysts|enterprise analys...|[\\n  \"KS126DB6T06...|[\\n  \"Merchandisi...|[\\n  \"KS126DB6T06...|   [\\n  \"Merchandisi...|                  []|                  []|[\\n  \"KS126706DPF...|[\\n  \"Mathematics...|[\\n  \"KS440W865GC...|[\\n  \"SQL (Progra...|15-2051.01|Business Intellig...|15-2051.01|Business Intellig...|[\\n  \"45.0601\",\\n...|[\\n  \"Economics, ...|[\\n  \"45.06\",\\n  ...|[\\n  \"Economics\",...|[\\n  \"45\",\\n  \"27...|[\\n  \"Social Scie...|   15-0000|Computer and Math...|   15-2000|Mathematical Scie...|   15-2050|Data Scientists|   15-2051|Data Scientists|             23|Information Techn...|        231010|Business Intellig...|                  23101011|           General ERP Analy...|                2310|     Business Intellig...|                     23101011|              General ERP Analy...|           231010|  Business Intellig...|                   2310|        Business Intellig...|                23|   Information Techn...|15-0000|Computer and Math...|15-2000|Mathematical Scie...|15-2050|Data Scientists|15-2051|Data Scientists|        [\\n  7\\n]|  [\\n  \"Artificial ...|          44|        Retail Trade|         441|Motor Vehicle and...|        4413|Automotive Parts,...|       44133|Automotive Parts ...|      441330|Automotive Parts ...|\n|0cb072af26757b6c4...|         8/2/2024|  2024-08-02 17:08:...|         0|6/2/2024| 8/1/2024|    NULL| [\\n  \"Job Board\"\\n]| [\\n  \"maine.gov\"\\n]|[\\n  \"https://job...|         []|               NULL|Oracle Consultant...|Oracle Consultant...|       8/1/2024|            NULL|  133098|Smx Corporation L...|        SMX|               true|      [\\n  99\\n]| [\\n  \"No Educatio...|           99|No Education Listed|         NULL|              NULL|              1|Full-time (&gt; 32 h...|                   3|                   3|        false|  NULL|          1|          Remote|               NULL|     NULL|       NULL|{\\n  \"lat\": 44.31...|    QXVndXN0YSwgTUU=|  Augusta, ME| 23011|  Kennebec, ME|12300|Augusta-Watervill...|   23|     Maine|          23011|        Kennebec, ME|          23011|        Kennebec, ME|       12300|Augusta-Watervill...|       12300|Augusta-Watervill...|    56|Administrative an...|   561|Administrative an...|  5613| Employment Services| 56132|Temporary Help Se...|561320|Temporary Help Se...|ET21DDA63780A7DC09| Oracle Consultants|oracle consultant...|[\\n  \"KS122626T55...|[\\n  \"Procurement...|[\\n  \"KS122626T55...|   [\\n  \"Procurement...|                  []|                  []|                  []|                  []|[\\n  \"BGSBF3F508F...|[\\n  \"Oracle Busi...|15-2051.01|Business Intellig...|15-2051.01|Business Intellig...|                  []|                  []|                  []|                  []|                  []|                  []|   15-0000|Computer and Math...|   15-2000|Mathematical Scie...|   15-2050|Data Scientists|   15-2051|Data Scientists|             23|Information Techn...|        231010|Business Intellig...|                  23101012|           Oracle Consultant...|                2310|     Business Intellig...|                     23101012|              Oracle Consultant...|           231010|  Business Intellig...|                   2310|        Business Intellig...|                23|   Information Techn...|15-0000|Computer and Math...|15-2000|Mathematical Scie...|15-2050|Data Scientists|15-2051|Data Scientists|             NULL|                  NULL|          56|Administrative an...|         561|Administrative an...|        5613| Employment Services|       56132|Temporary Help Se...|      561320|Temporary Help Se...|\n|85318b12b3331fa49...|         9/6/2024|  2024-09-06 20:32:...|         1|6/2/2024| 7/7/2024|      35| [\\n  \"Job Board\"\\n]|[\\n  \"dejobs.org\"\\n]|[\\n  \"https://dej...|         []|               NULL|        Data Analyst|Taking care of pe...|      6/10/2024|               8|39063746|            Sedgwick|   Sedgwick|              false|       [\\n  2\\n]| [\\n  \"Bachelor's ...|            2|  Bachelor's degree|         NULL|              NULL|              1|Full-time (&gt; 32 h...|                   5|                NULL|        false|  NULL|          0|          [None]|               NULL|     NULL|       NULL|{\\n  \"lat\": 32.77...|    RGFsbGFzLCBUWA==|   Dallas, TX| 48113|    Dallas, TX|19100|Dallas-Fort Worth...|   48|     Texas|          48113|          Dallas, TX|          48113|          Dallas, TX|       19100|Dallas-Fort Worth...|       19100|Dallas-Fort Worth...|    52|Finance and Insur...|   524|Insurance Carrier...|  5242|Agencies, Brokera...| 52429|Other Insurance R...|524291|    Claims Adjusting|ET3037E0C947A02404|      Data Analysts|        data analyst|[\\n  \"KS1218W78FG...|[\\n  \"Management\"...|[\\n  \"ESF3939CE1F...|   [\\n  \"Exception R...|[\\n  \"KS683TN76T7...|[\\n  \"Security Cl...|[\\n  \"KS1218W78FG...|[\\n  \"Management\"...|[\\n  \"KS126HY6YLT...|[\\n  \"Microsoft O...|15-2051.01|Business Intellig...|15-2051.01|Business Intellig...|                  []|                  []|                  []|                  []|                  []|                  []|   15-0000|Computer and Math...|   15-2000|Mathematical Scie...|   15-2050|Data Scientists|   15-2051|Data Scientists|             23|Information Techn...|        231113|Data / Data Minin...|                  23111310|                   Data Analyst|                2311|     Data Analysis and...|                     23111310|                      Data Analyst|           231113|  Data / Data Minin...|                   2311|        Data Analysis and...|                23|   Information Techn...|15-0000|Computer and Math...|15-2000|Mathematical Scie...|15-2050|Data Scientists|15-2051|Data Scientists|             NULL|                  NULL|          52|Finance and Insur...|         524|Insurance Carrier...|        5242|Agencies, Brokera...|       52429|Other Insurance R...|      524291|    Claims Adjusting|\n|1b5c3941e54a1889e...|         9/6/2024|  2024-09-06 20:32:...|         1|6/2/2024|7/20/2024|      48| [\\n  \"Job Board\"\\n]|[\\n  \"disabledper...|[\\n  \"https://www...|         []|               NULL|Sr. Lead Data Mgm...|About this role:\\...|      6/12/2024|              10|37615159|         Wells Fargo|Wells Fargo|              false|      [\\n  99\\n]| [\\n  \"No Educatio...|           99|No Education Listed|         NULL|              NULL|              1|Full-time (&gt; 32 h...|                   3|                NULL|        false|  NULL|          0|          [None]|               NULL|     NULL|       NULL|{\\n  \"lat\": 33.44...|    UGhvZW5peCwgQVo=|  Phoenix, AZ|  4013|  Maricopa, AZ|38060|Phoenix-Mesa-Chan...|    4|   Arizona|           4013|        Maricopa, AZ|           4013|        Maricopa, AZ|       38060|Phoenix-Mesa-Chan...|       38060|Phoenix-Mesa-Chan...|    52|Finance and Insur...|   522|Credit Intermedia...|  5221|Depository Credit...| 52211|  Commercial Banking|522110|  Commercial Banking|ET2114E0404BA30075|Management Analysts|sr lead data mgmt...|[\\n  \"KS123QX62QY...|[\\n  \"Exit Strate...|[\\n  \"KS123QX62QY...|   [\\n  \"Exit Strate...|                  []|                  []|[\\n  \"KS7G6NP6R6L...|[\\n  \"Reliability...|[\\n  \"KS4409D76NW...|[\\n  \"SAS (Softwa...|15-2051.01|Business Intellig...|15-2051.01|Business Intellig...|                  []|                  []|                  []|                  []|                  []|                  []|   15-0000|Computer and Math...|   15-2000|Mathematical Scie...|   15-2050|Data Scientists|   15-2051|Data Scientists|             23|Information Techn...|        231113|Data / Data Minin...|                  23111310|                   Data Analyst|                2311|     Data Analysis and...|                     23111310|                      Data Analyst|           231113|  Data / Data Minin...|                   2311|        Data Analysis and...|                23|   Information Techn...|15-0000|Computer and Math...|15-2000|Mathematical Scie...|15-2050|Data Scientists|15-2051|Data Scientists|        [\\n  6\\n]|  [\\n  \"Data Privac...|          52|Finance and Insur...|         522|Credit Intermedia...|        5221|Depository Credit...|       52211|  Commercial Banking|      522110|  Commercial Banking|\n|cb5ca25f02bdf25c1...|        6/19/2024|   2024-06-19 07:00:00|         0|6/2/2024|6/17/2024|      15|[\\n  \"FreeJobBoar...|[\\n  \"craigslist....|[\\n  \"https://mod...|         []|               NULL|Comisiones de $10...|Comisiones de $10...|      6/17/2024|              15|       0|        Unclassified|      LH/GM|              false|      [\\n  99\\n]| [\\n  \"No Educatio...|           99|No Education Listed|         NULL|              NULL|              3|Part-time / full-...|                NULL|                NULL|        false| 92500|          0|          [None]|               year|   150000|      35000|{\\n  \"lat\": 37.63...|    TW9kZXN0bywgQ0E=|  Modesto, CA|  6099|Stanislaus, CA|33700|         Modesto, CA|    6|California|           6099|      Stanislaus, CA|           6099|      Stanislaus, CA|       33700|         Modesto, CA|       33700|         Modesto, CA|    99|Unclassified Indu...|   999|Unclassified Indu...|  9999|Unclassified Indu...| 99999|Unclassified Indu...|999999|Unclassified Indu...|ET0000000000000000|       Unclassified|comisiones de por...|                  []|                  []|                  []|                     []|                  []|                  []|                  []|                  []|                  []|                  []|15-2051.01|Business Intellig...|15-2051.01|Business Intellig...|                  []|                  []|                  []|                  []|                  []|                  []|   15-0000|Computer and Math...|   15-2000|Mathematical Scie...|   15-2050|Data Scientists|   15-2051|Data Scientists|             23|Information Techn...|        231010|Business Intellig...|                  23101012|           Oracle Consultant...|                2310|     Business Intellig...|                     23101012|              Oracle Consultant...|           231010|  Business Intellig...|                   2310|        Business Intellig...|                23|   Information Techn...|15-0000|Computer and Math...|15-2000|Mathematical Scie...|15-2050|Data Scientists|15-2051|Data Scientists|             NULL|                  NULL|          99|Unclassified Indu...|         999|Unclassified Indu...|        9999|Unclassified Indu...|       99999|Unclassified Indu...|      999999|Unclassified Indu...|\nnonly showing top 5 rows\n\n\n[Stage 115:&gt;                                                        (0 + 1) / 1]                                                                                \n\n\n72498"
  },
  {
    "objectID": "assignment03-JulioVargasGarcia.html#computing-medians",
    "href": "assignment03-JulioVargasGarcia.html#computing-medians",
    "title": "Assignment 03",
    "section": "1.1 Computing medians",
    "text": "1.1 Computing medians\n\nfrom pyspark.sql.functions import col, regexp_replace, trim\n# 1.1 Casting salary and experience columns\n\n\ndf = df.withColumn(\"SALARY\", col(\"SALARY\").cast(\"float\")) \\\n       .withColumn(\"SALARY_FROM\", col(\"SALARY_FROM\").cast(\"float\")) \\\n       .withColumn(\"SALARY_TO\", col(\"SALARY_TO\").cast(\"float\")) \\\n       .withColumn(\"MIN_YEARS_EXPERIENCE\", col(\"MIN_YEARS_EXPERIENCE\").cast(\"float\"))\\\n       .withColumn(\"MAX_YEARS_EXPERIENCE\", col(\"MAX_YEARS_EXPERIENCE\").cast(\"float\"))\n#df.select(\"SALARY\", \"SALARY_FROM\", \"SALARY_TO\", \"MIN_YEARS_EXPERIENCE\", \"MAX_YEARS_EXPERIENCE\").printSchema()\ndf.select(\"SALARY\", \"SALARY_FROM\", \"SALARY_TO\", \"MIN_YEARS_EXPERIENCE\", \"MAX_YEARS_EXPERIENCE\").show(5)\n\n+-------+-----------+---------+--------------------+--------------------+\n| SALARY|SALARY_FROM|SALARY_TO|MIN_YEARS_EXPERIENCE|MAX_YEARS_EXPERIENCE|\n+-------+-----------+---------+--------------------+--------------------+\n|   NULL|       NULL|     NULL|                 2.0|                 2.0|\n|   NULL|       NULL|     NULL|                 3.0|                 3.0|\n|   NULL|       NULL|     NULL|                 5.0|                NULL|\n|   NULL|       NULL|     NULL|                 3.0|                NULL|\n|92500.0|    35000.0| 150000.0|                NULL|                NULL|\n+-------+-----------+---------+--------------------+--------------------+\nonly showing top 5 rows"
  },
  {
    "objectID": "assignment03-JulioVargasGarcia.html#computing-medians-1",
    "href": "assignment03-JulioVargasGarcia.html#computing-medians-1",
    "title": "Assignment 03",
    "section": "1.2 Computing medians",
    "text": "1.2 Computing medians\n\n# 1.2 Computing medians\ndef compute_median(sdf, col_name):\n    q = sdf.approxQuantile(col_name, [0.5], 0.01) #50 percentile 1% error\n    return q[0] if q else None\n\nmedian_from = compute_median(df, \"SALARY_FROM\")\nmedian_to = compute_median(df, \"SALARY_TO\")\nmedian_salary = compute_median(df, \"SALARY\")\n\n[Stage 119:&gt;                                                        (0 + 1) / 1]                                                                                [Stage 120:&gt;                                                        (0 + 1) / 1]                                                                                [Stage 121:&gt;                                                        (0 + 1) / 1]                                                                                \n\n\n\n# 1.2 Output\n#the median_from, median_to , median_salary respectively are:\n\nprint(\"- Median SALARY_FROM: $\" + str(median_from))\nprint(\"- Median SALARY_TO: $\" + str(median_to))\nprint(\"- Median SALARY: $\" + str(median_salary))\n\n- Median SALARY_FROM: $87295.0\n- Median SALARY_TO: $130042.0\n- Median SALARY: $115024.0"
  },
  {
    "objectID": "assignment03-JulioVargasGarcia.html#imputing-missing-salaries",
    "href": "assignment03-JulioVargasGarcia.html#imputing-missing-salaries",
    "title": "Assignment 03",
    "section": "1.3 Imputing missing salaries",
    "text": "1.3 Imputing missing salaries\n\n# 1.3 Imputing missing salaries\ndf = df.fillna({\n    \"SALARY_FROM\": median_from,\n    \"SALARY_TO\": median_to,\n    \"SALARY\": median_salary\n})\n\n# 1.3 Add new column Average_Salary\ndf = df.withColumn(\"Average_Salary\", (col(\"SALARY_FROM\") + col(\"SALARY_TO\")) / 2)\n\nexport_cols = [\"Average_Salary\",\"SALARY\",\"EDUCATION_LEVELS_NAME\",\"REMOTE_TYPE_NAME\",\n          \"MAX_YEARS_EXPERIENCE\",\"LOT_V6_SPECIALIZED_OCCUPATION_NAME\"]\n\n# 1.3 Output\ndf.select(*export_cols).show(5, truncate=False)\n\n+--------------+--------+-----------------------------+----------------+--------------------+----------------------------------+\n|Average_Salary|SALARY  |EDUCATION_LEVELS_NAME        |REMOTE_TYPE_NAME|MAX_YEARS_EXPERIENCE|LOT_V6_SPECIALIZED_OCCUPATION_NAME|\n+--------------+--------+-----------------------------+----------------+--------------------+----------------------------------+\n|108668.5      |115024.0|[\\n  \"Bachelor's degree\"\\n]  |[None]          |2.0                 |General ERP Analyst / Consultant  |\n|108668.5      |115024.0|[\\n  \"No Education Listed\"\\n]|Remote          |3.0                 |Oracle Consultant / Analyst       |\n|108668.5      |115024.0|[\\n  \"Bachelor's degree\"\\n]  |[None]          |NULL                |Data Analyst                      |\n|108668.5      |115024.0|[\\n  \"No Education Listed\"\\n]|[None]          |NULL                |Data Analyst                      |\n|92500.0       |92500.0 |[\\n  \"No Education Listed\"\\n]|[None]          |NULL                |Oracle Consultant / Analyst       |\n+--------------+--------+-----------------------------+----------------+--------------------+----------------------------------+\nonly showing top 5 rows"
  },
  {
    "objectID": "assignment03-JulioVargasGarcia.html#cleaning-education-column",
    "href": "assignment03-JulioVargasGarcia.html#cleaning-education-column",
    "title": "Assignment 03",
    "section": "1.4 Cleaning Education column",
    "text": "1.4 Cleaning Education column\n\n#1.4 Cleaning Education column\n#remove the \\n and \\r\ndf1 = df.withColumn(\"EDUCATION_LEVELS_NAME\",\n    trim(\n        regexp_replace(regexp_replace(col(\"EDUCATION_LEVELS_NAME\"),r\"\\n|\\r\", \"\"), #remove \\n and \\r\n                      r\"\\[\\s+\\\"\", \"[\\\"\" ) #remove spaces.\n    )\n)\n# 1.4 Output\ndf1.select(*export_cols).show(5, truncate=False)\n\n+--------------+--------+-----------------------+----------------+--------------------+----------------------------------+\n|Average_Salary|SALARY  |EDUCATION_LEVELS_NAME  |REMOTE_TYPE_NAME|MAX_YEARS_EXPERIENCE|LOT_V6_SPECIALIZED_OCCUPATION_NAME|\n+--------------+--------+-----------------------+----------------+--------------------+----------------------------------+\n|108668.5      |115024.0|[\"Bachelor's degree\"]  |[None]          |2.0                 |General ERP Analyst / Consultant  |\n|108668.5      |115024.0|[\"No Education Listed\"]|Remote          |3.0                 |Oracle Consultant / Analyst       |\n|108668.5      |115024.0|[\"Bachelor's degree\"]  |[None]          |NULL                |Data Analyst                      |\n|108668.5      |115024.0|[\"No Education Listed\"]|[None]          |NULL                |Data Analyst                      |\n|92500.0       |92500.0 |[\"No Education Listed\"]|[None]          |NULL                |Oracle Consultant / Analyst       |\n+--------------+--------+-----------------------+----------------+--------------------+----------------------------------+\nonly showing top 5 rows"
  },
  {
    "objectID": "assignment03-JulioVargasGarcia.html#exporting-cleaned-data",
    "href": "assignment03-JulioVargasGarcia.html#exporting-cleaned-data",
    "title": "Assignment 03",
    "section": "1.5 Exporting Cleaned Data",
    "text": "1.5 Exporting Cleaned Data\n\n#1.5 Exporting Cleaned Data\n# Export to CSV\ndf_selected=df1.select(*export_cols)\npdf = df_selected.toPandas()\npdf.to_csv(\"data/lightcast_cleaned.csv\", index=False)\n\nprint(\"Data cleaning complete. Rows retained:\", len(pdf))\n\n[Stage 124:&gt;                                                        (0 + 1) / 1]                                                                                \n\n\nData cleaning complete. Rows retained: 72498"
  },
  {
    "objectID": "assignment03-JulioVargasGarcia.html#template",
    "href": "assignment03-JulioVargasGarcia.html#template",
    "title": "Assignment 03",
    "section": "2.1 TEMPLATE",
    "text": "2.1 TEMPLATE\n\nimport plotly.graph_objects as go\nimport plotly.io as pio\n\npio.templates[\"nike\"] = go.layout.Template(\n    # LAYOUT\n    layout = {\n        # Fonts and colors\n        'title': {\n            'font': {'family': 'HelveticaNeue-CondensedBold, Helvetica, Sans-serif',\n                     'size': 30,\n                     'color': '#13007c'} \n        },\n        'font': {'family': 'Helvetica Neue, Helvetica, Sans-serif',\n                 'size': 16,\n                 'color': '#3b3b3b'}, \n\n        'colorway': ['#fffb00', '#e010fc'], \n        # Adding others\n        'hovermode': 'x unified',\n        'plot_bgcolor': '#E5ECF6',\n        'paper_bgcolor': \"#FFFFFF\",\n        \n    },\n    # DATA\n    data = {\n        # Default style applied to all bar charts\n        'bar': [go.Bar(\n            texttemplate = '%{value:$.2s}',\n            textposition = 'outside',\n            textfont = {'family': 'Helvetica Neue, Helvetica, Sans-serif',\n                        'size': 20,\n                        'color': '#ff6874'} # FFFFFF\n        )]\n    }\n)"
  },
  {
    "objectID": "assignment03-JulioVargasGarcia.html#development-of-question-2",
    "href": "assignment03-JulioVargasGarcia.html#development-of-question-2",
    "title": "Assignment 03",
    "section": "2.2 Development of Question 2",
    "text": "2.2 Development of Question 2\n\n#your code for first query\nimport pandas as pd\nimport polars as pl\nfrom IPython.display import display, HTML\n\n#2.2 Filter the dataset - Remove records where salary is missing or zero.\ndf_valid_salaries = df.filter(df[\"SALARY\"] &gt; 0).select(\"NAICS2_NAME\",\"EMPLOYMENT_TYPE_NAME\", \"SALARY\")\n\n#2.2 output - convert to pandas\npdf = df_valid_salaries.toPandas()\nprint(\"Data cleaning complete. Rows retained:\", len(pdf))\n\n#2.3 Aggregate data - NAICS industry codes, employment type and compute salary distribution.\n\n# Clean employment type names for better readability\npdf[\"EMPLOYMENT_TYPE_NAME\"] = (pdf[\"EMPLOYMENT_TYPE_NAME\"].astype(str)\n                               .str.replace(r\"[^\\x00-\\x7F]+\", \"\", regex=True)\n)\n\n#2.3 output\nmedian_salaries_naics = pdf.groupby(\"NAICS2_NAME\")[\"SALARY\"].median()\nmedian_salaries_employee = pdf.groupby(\"EMPLOYMENT_TYPE_NAME\")[\"SALARY\"].median()\ndisplay(median_salaries_naics.to_frame().head())\ndisplay(median_salaries_employee.to_frame().head())\n\n[Stage 125:&gt;                                                        (0 + 1) / 1]                                                                                \n\n\nData cleaning complete. Rows retained: 72498\n\n\n\n\n\n\n\n\n\nSALARY\n\n\nNAICS2_NAME\n\n\n\n\n\nAccommodation and Food Services\n115024.0\n\n\nAdministrative and Support and Waste Management and Remediation Services\n115024.0\n\n\nAgriculture, Forestry, Fishing and Hunting\n115024.0\n\n\nArts, Entertainment, and Recreation\n115024.0\n\n\nConstruction\n115024.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSALARY\n\n\nEMPLOYMENT_TYPE_NAME\n\n\n\n\n\nFull-time (&gt; 32 hours)\n115024.0\n\n\nNone\n115024.0\n\n\nPart-time ( 32 hours)\n115024.0\n\n\nPart-time / full-time\n115024.0\n\n\n\n\n\n\n\n\n#2.4 Visualize results  box plot \n# X-axis = NAICS2_NAME || Y-axis = SALARY_FROM || Group by EMPLOYMENT_TYPE_NAME.\npdf = df.select(\"NAICS2_NAME\", \"SALARY\").toPandas()\nfig = px.box(pdf, x=\"NAICS2_NAME\", y=\"SALARY\", title=\"Salary Distribution by Industry\",\n             color_discrete_sequence=[\"#EF553B\"])\n                 # add nike template\n#fig.update_layout(template=\"nike\")\n\n#fig.update_xaxes(tickangle=45)\n\nfig.update_layout(\n    template=\"nike\",\n    height=700,\n    xaxis=dict(\n        title=dict(text=\"NAICS2_NAME\", standoff=40), \n        tickangle=45,\n        tickfont=dict(size=10),\n        automargin=True\n    ),\n    yaxis=dict(title=dict(text=\"Salary\")),\n    margin=dict(b=150)    \n        \n)\n\n\nfig.show()\nfig.write_image(\"output/Q2.svg\", width=1000, height=600, scale=1)\n\n[Stage 126:&gt;                                                        (0 + 1) / 1]"
  },
  {
    "objectID": "assignment03-JulioVargasGarcia.html#explanation-of-box-plot-2",
    "href": "assignment03-JulioVargasGarcia.html#explanation-of-box-plot-2",
    "title": "Assignment 03",
    "section": "2.3 Explanation of Box Plot 2",
    "text": "2.3 Explanation of Box Plot 2\nThis box plot gives a quick view of how salaries vary by industry, each box is where most of the pay sits, and the line inside is the median. Those dots floating above are the really high-paying jobs. For example in the Information industry, most salaries bunch around 110 k, but you can also see some offers way higher than that, those are the outliers and this job is among the top salaries at about 500k."
  },
  {
    "objectID": "assignment03-JulioVargasGarcia.html#development-of-question-3",
    "href": "assignment03-JulioVargasGarcia.html#development-of-question-3",
    "title": "Assignment 03",
    "section": "3.1 Development of Question 3",
    "text": "3.1 Development of Question 3\n\nimport plotly.express as px\n#3.1 Analyze how salaries differ across LOT_OCCUPATION_NAME occupation types.\n#ONET_NAME CHANGE TO LOT_OCCUPATION_NAME\n\n#Aggregate Data\n\nsalary_analysis = spark.sql(\"\"\"\n    SELECT\n        LOT_OCCUPATION_NAME AS Occupation_name, \n        PERCENTILE(SALARY, 0.5) AS Median_Salary,\n        COUNT(*) AS Job_Postings\n    FROM job_postings\n    WHERE LOT_OCCUPATION_NAME IS NOT NULL\n    GROUP BY LOT_OCCUPATION_NAME\n    ORDER BY Job_Postings DESC\n    LIMIT 10\n\"\"\") #the result only has 6 results and a null, limit to 10 is not necessary\n\nsalary_pd = salary_analysis.toPandas()\ndisplay(salary_pd.head())\n\n#Simple plot to Analyze\nfiga = px.scatter(\n    salary_pd,\n    x=\"Occupation_name\",\n    y=\"Median_Salary\",\n    size=\"Job_Postings\",\n    title=\"Salary Analysis by  Occupation\",\n    color=\"Occupation_name\"\n)\nfiga.update_xaxes(tickangle=45, automargin=True)\nfiga.show()\n\n#3.2 Visualize results  bubble chart\nimport plotly.express as px\n\nfig = px.scatter(\n    salary_pd,\n    x=\"Occupation_name\",\n    y=\"Median_Salary\",\n    size=\"Job_Postings\",\n    title=\"Salary Analysis by LOT Occupation Type (Bubble Chart)\",\n    labels={\n        \"Occupation_name\": \"LOT Occupation\",\n        \"Median_Salary\": \"Median Salary\",\n        \"Job_Postings\": \"Number of Job Postings\"\n    },\n    hover_name=\"Occupation_name\",\n    size_max=60,\n    width=900,\n    height=600,\n    color=\"Job_Postings\",\n    color_continuous_scale=\"Plasma\"\n)\n#customize layout\nfig.update_layout(\n    \n    height=700,\n    font_family=\"Arial\",\n    font_size=14,\n    title_font_size=25,\n    title_font_color=\"#13007c\",\n    font_color=\"#2e2e2e\", \n    xaxis_title=\"LOT Occupation\",\n    yaxis_title=\"Median Salary\",\n    plot_bgcolor=\"#FAFDFF\",\n    xaxis=dict(\n        tickangle=-45,\n        showline=True,\n        linecolor=\"#444\"\n    ),\n    yaxis=dict(\n        showline=True,\n        linecolor=\"black\"\n    )\n)\n\n\nfig.show()\nfig.write_image(\"output/Q3.svg\", width=1000, height=600, scale=1)\n\n[Stage 127:&gt;                                                        (0 + 1) / 1]                                                                                \n\n\n\n\n\n\n\n\n\nOccupation_name\nMedian_Salary\nJob_Postings\n\n\n\n\n0\nData / Data Mining Analyst\n95250.0\n30057\n\n\n1\nBusiness Intelligence Analyst\n125900.0\n29445\n\n\n2\nComputer Systems Engineer / Architect\n157600.0\n8212\n\n\n3\nBusiness / Management Analyst\n93650.0\n4326\n\n\n4\nClinical Analyst / Clinical Documentation and ...\n89440.0\n261"
  },
  {
    "objectID": "assignment03-JulioVargasGarcia.html#explanation-of-box-plot-3",
    "href": "assignment03-JulioVargasGarcia.html#explanation-of-box-plot-3",
    "title": "Assignment 03",
    "section": "3.2 Explanation of Box Plot 3",
    "text": "3.2 Explanation of Box Plot 3\nThis shows how salaries stack up by occupation. Each bubble is a job type, higher on the chart means a bigger median salary, we can see bigger bubbles which mean more job postings, and the color shows volume too. For example, Business Intelligence Analyst pay well and have tons of postings, while Market Research Analyst roles are smaller and pay less."
  },
  {
    "objectID": "assignment03-JulioVargasGarcia.html#development-of-question-4",
    "href": "assignment03-JulioVargasGarcia.html#development-of-question-4",
    "title": "Assignment 03",
    "section": "4.1 Development of Question 4",
    "text": "4.1 Development of Question 4\n\n# Defining education level groupings\nlower_deg = [\"Bachelor's\", \"Associate\", \"GED\", \"No Education Listed\", \"High school\"]\nhigher_deg = [\"Master's degree\", \"PhD or professional degree\"]\n\n# Adding new column EDU_GROUP \ndf = df.withColumn(\n    \"EDU_GROUP\",\n    when(col(\"EDUCATION_LEVELS_NAME\").rlike(\"|\".join([f\"(?i){deg}\" for deg in lower_deg])), \"Bachelor's or lower\")\n    .when(col(\"EDUCATION_LEVELS_NAME\").rlike(\"|\".join([f\"(?i){deg}\" for deg in higher_deg])), \"Master's or PhD\")\n    .otherwise(\"Other\")\n)\n\n# Modyfying/Casting necessary columns to float\ndf = df.withColumn(\"MAX_YEARS_EXPERIENCE\", col(\"MAX_YEARS_EXPERIENCE\").cast(\"float\"))\ndf = df.withColumn(\"Average_Salary\", col(\"Average_Salary\").cast(\"float\"))\n\n# df.select(\"MAX_YEARS_EXPERIENCE\",\"Average_Salary\",\"EDU_GROUP\",\"EDUCATION_LEVELS_NAME\").printSchema() #check schema changes\n\n# print(df.count()) #Total 72,498 after 8074\n\n# Filtering for non-null and positive values\ndf = df.filter(\n    col(\"MAX_YEARS_EXPERIENCE\").isNotNull() & col(\"Average_Salary\").isNotNull() &\n    (col(\"MAX_YEARS_EXPERIENCE\") &gt; 0) &  (col(\"Average_Salary\") &gt; 0)\n)\n\n# Filtering for just the two EDU_GROUP groups\ndf_filtered = df.filter(col(\"EDU_GROUP\").isin(\"Bachelor's or lower\", \"Master's or PhD\"))\n\n# Converting to Pandas for plotting\ndf_pd = df_filtered.toPandas()\npdf4=df.select(\"MAX_YEARS_EXPERIENCE\",\"Average_Salary\",\"EDU_GROUP\",\"EDUCATION_LEVELS_NAME\").toPandas()\ndisplay(pdf4.head())\n\n[Stage 130:&gt;                                                        (0 + 1) / 1]                                                                                [Stage 131:&gt;                                                        (0 + 1) / 1]                                                                                \n\n\n\n\n\n\n\n\n\nMAX_YEARS_EXPERIENCE\nAverage_Salary\nEDU_GROUP\nEDUCATION_LEVELS_NAME\n\n\n\n\n0\n2.0\n108668.5\nBachelor's or lower\n[\\n \"Bachelor's degree\"\\n]\n\n\n1\n3.0\n108668.5\nBachelor's or lower\n[\\n \"No Education Listed\"\\n]\n\n\n2\n7.0\n108668.5\nBachelor's or lower\n[\\n \"No Education Listed\"\\n]\n\n\n3\n2.0\n92962.0\nBachelor's or lower\n[\\n \"Bachelor's degree\",\\n \"Master's degree\"\\n]\n\n\n4\n5.0\n108668.5\nBachelor's or lower\n[\\n \"Associate degree\",\\n \"Bachelor's degree...\n\n\n\n\n\n\n\n\n# Jittering / trimming\ndf_pd[\"MAX_EXPERIENCE_JITTER\"] = df_pd[\"MAX_YEARS_EXPERIENCE\"] + np.random.uniform(-0.25, 0.25, size=len(df_pd))\ndf_pd[\"AVERAGE_SALARY_JITTER\"] = df_pd[\"Average_Salary\"] + np.random.uniform(-2500, 2500, size=len(df_pd))\ndf_pd = df_pd.round(2)\n\n# Remove outlier higher than 399K\ndf_pd = df_pd[df_pd[\"AVERAGE_SALARY_JITTER\"] &lt;= 399000]\n\ndf_pd.head()\n\n\n\n\n\n\n\n\nID\nLAST_UPDATED_DATE\nLAST_UPDATED_TIMESTAMP\nDUPLICATES\nPOSTED\nEXPIRED\nDURATION\nSOURCE_TYPES\nSOURCES\nURL\n...\nNAICS_2022_4\nNAICS_2022_4_NAME\nNAICS_2022_5\nNAICS_2022_5_NAME\nNAICS_2022_6\nNAICS_2022_6_NAME\nAverage_Salary\nEDU_GROUP\nMAX_EXPERIENCE_JITTER\nAVERAGE_SALARY_JITTER\n\n\n\n\n0\n1f57d95acf4dc67ed2819eb12f049f6a5c11782c\n9/6/2024\n2024-09-06 20:32:57.352\n0\n6/2/2024\n6/8/2024\n6.0\n[\\n \"Company\"\\n]\n[\\n \"brassring.com\"\\n]\n[\\n \"https://sjobs.brassring.com/TGnewUI/Sear...\n...\n4413\nAutomotive Parts, Accessories, and Tire Retailers\n44133\nAutomotive Parts and Accessories Retailers\n441330\nAutomotive Parts and Accessories Retailers\n108668.5\nBachelor's or lower\n2.07\n110819.55\n\n\n1\n0cb072af26757b6c4ea9464472a50a443af681ac\n8/2/2024\n2024-08-02 17:08:58.838\n0\n6/2/2024\n8/1/2024\nNaN\n[\\n \"Job Board\"\\n]\n[\\n \"maine.gov\"\\n]\n[\\n \"https://joblink.maine.gov/jobs/1085740\"\\n]\n...\n5613\nEmployment Services\n56132\nTemporary Help Services\n561320\nTemporary Help Services\n108668.5\nBachelor's or lower\n2.94\n108300.48\n\n\n2\n5a843df632e1ff756fa19d80a0871262d51becc0\n6/21/2024\n2024-06-21 07:00:00.000\n0\n6/2/2024\n6/20/2024\n18.0\n[\\n \"Job Board\"\\n]\n[\\n \"computerwork.com\"\\n]\n[\\n \"http://computerwork.com/us/en/search-job...\n...\n9999\nUnclassified Industry\n99999\nUnclassified Industry\n999999\nUnclassified Industry\n108668.5\nBachelor's or lower\n7.08\n109648.17\n\n\n3\n229620073766234e814e8add21db7dfaef69b3bd\n10/9/2024\n2024-10-09 18:07:44.758\n0\n6/2/2024\n8/1/2024\nNaN\n[\\n \"Company\"\\n]\n[\\n \"3ds.com\"\\n]\n[\\n \"https://www.3ds.com/careers/jobs/sr-mark...\n...\n5415\nComputer Systems Design and Related Services\n54151\nComputer Systems Design and Related Services\n541511\nCustom Computer Programming Services\n92962.0\nBachelor's or lower\n1.83\n91939.49\n\n\n4\n138ce2c9453b47a9b33403c364d4fd80996caa4f\n8/10/2024\n2024-08-10 19:36:49.244\n5\n6/2/2024\n8/9/2024\nNaN\n[\\n \"Job Board\",\\n \"Education\",\\n \"Recruite...\n[\\n \"silkroad.com\",\\n \"hercjobs.org\",\\n \"di...\n[\\n \"https://main.hercjobs.org/jobs/20166141/...\n...\n6113\nColleges, Universities, and Professional Schools\n61131\nColleges, Universities, and Professional Schools\n611310\nColleges, Universities, and Professional Schools\n108668.5\nBachelor's or lower\n5.23\n106881.94\n\n\n\n\n5 rows × 135 columns\n\n\n\n\n#jittering and triming\n# Plot four groups\nfig1 = px.scatter(\n    df_pd,\n    x=\"MAX_EXPERIENCE_JITTER\",\n    y=\"AVERAGE_SALARY_JITTER\",\n    color=\"EDU_GROUP\",\n    hover_data=[\"LOT_V6_SPECIALIZED_OCCUPATION_NAME\"],\n    title=\"&lt;b&gt;Experience vs Salary by Education Level&lt;/b&gt;\",\n    opacity=1.0, #0.7\n    color_discrete_sequence=[\n        \"#636EFA\",  # Blue\n        \"#EF553B\",  # Red\n        \"#00CC96\",  # Green\n        \"#AB63FA\"   # Purple\n    ]\n)\n\nfig1.update_traces(\n    marker=dict(size=10, line=dict(width=1, color=\"black\"))\n)\n\nfig1.update_layout(\n    plot_bgcolor=\"#fcfcf0\",\n    paper_bgcolor=\"#f5d9b2\",\n    font=dict(family=\"Segoe UI\", size=14, color=\"#2b2b2b\"),\n    title_font=dict(size=22, color=\"#4b3832\"),\n    xaxis_title=\"Years of Experience\",\n    yaxis_title=\"Average Salary (USD)\",\n    legend_title=\"Education Group\",\n    hoverlabel=dict(bgcolor=\"white\", font_size=13, font_family=\"Arial\"),\n    margin=dict(t=70, b=60, l=60, r=60),\n    xaxis=dict(\n        gridcolor=\"#e0e0e0\",\n        tickmode=\"linear\",\n        dtick=1\n    ),\n    yaxis=dict(gridcolor=\"#cccccc\")\n)\n\nfig1.show()\nfig.write_image(\"output/Q4.svg\", width=1000, height=600, scale=1)"
  },
  {
    "objectID": "assignment03-JulioVargasGarcia.html#explanation-of-box-plot-4",
    "href": "assignment03-JulioVargasGarcia.html#explanation-of-box-plot-4",
    "title": "Assignment 03",
    "section": "4.2 Explanation of Box Plot 4",
    "text": "4.2 Explanation of Box Plot 4\nThis chart shows how pay changes with experience for two education levels. Blue dots are people with a bachelor s or lower, red dots are master’s or PhD. We can see most salaries cluster under 200k no matter the experience, but a few outliers pop way higher."
  },
  {
    "objectID": "assignment03-JulioVargasGarcia.html#development-of-question-5",
    "href": "assignment03-JulioVargasGarcia.html#development-of-question-5",
    "title": "Assignment 03",
    "section": "5.1 Development of Question 5",
    "text": "5.1 Development of Question 5\n\nfrom pyspark.sql.functions import when, col, trim\n\n#5.1 Split into three groups based on REMOTE_TYPE_NAME\ndf = df.withColumn(\n    \"REMOTE_GROUP\",\n    when(trim(col(\"REMOTE_TYPE_NAME\")) == \"Remote\", \"Remote\")\n    .when(trim(col(\"REMOTE_TYPE_NAME\")) == \"Hybrid Remote\", \"Hybrid\")\n    .when(trim(col(\"REMOTE_TYPE_NAME\")) == \"Not Remote\", \"Onsite\")\n    .when(col(\"REMOTE_TYPE_NAME\").isNull(), \"Onsite\")\n    .otherwise(\"Onsite\")\n)\n\n#print(df.count())\n\n#5.1 Filter valid values\ndf = df.filter(\n    col(\"MAX_YEARS_EXPERIENCE\").isNotNull() & col(\"Average_Salary\").isNotNull() &\n    (col(\"MAX_YEARS_EXPERIENCE\") &gt; 0) & (col(\"Average_Salary\") &gt; 0)\n)\n\n#5.1 Pandas\ndf_pd = df.select(\n    \"MAX_YEARS_EXPERIENCE\",\"Average_Salary\",\"LOT_V6_SPECIALIZED_OCCUPATION_NAME\",\"REMOTE_GROUP\"\n    ).toPandas()\n\ndf_pd.head()\n\n# Jittering / trimming\ndf_pd[\"MAX_EXPERIENCE_JITTER\"] = df_pd[\"MAX_YEARS_EXPERIENCE\"] + np.random.uniform(-0.15, 0.15, size=len(df_pd))\ndf_pd[\"AVERAGE_SALARY_JITTER\"] = df_pd[\"Average_Salary\"] + np.random.uniform(-1000, 1000, size=len(df_pd))\ndf_pd = df_pd.round(2)\n\n# Remove outlier higher than 399K\ndf_pd = df_pd[df_pd[\"AVERAGE_SALARY_JITTER\"] &lt;= 399000]\n\n[Stage 132:&gt;                                                        (0 + 1) / 1]                                                                                \n\n\n\n# Plot four groups\nfig5 = px.scatter(\n    df_pd,\n    x=\"MAX_EXPERIENCE_JITTER\",\n    y=\"AVERAGE_SALARY_JITTER\",\n    color=\"REMOTE_GROUP\",\n    hover_data=[\"LOT_V6_SPECIALIZED_OCCUPATION_NAME\"],\n    title=\"&lt;b&gt;Experience vs Salary by Remote Work Type &lt;/b&gt;\",\n    opacity=1.0, #0.7\n    color_discrete_sequence=[\n        \"#636EFA\",  # Blue\n        \"#EF553B\",  # Red\n        \"#00CC96\",  # Green\n        \"#AB63FA\"   # Purple\n    ]\n)\n\nfig5.update_traces(\n    marker=dict(size=10, line=dict(width=1, color=\"black\"))\n)\n\nfig5.update_layout(\n    plot_bgcolor=\"#fcfcf0\",   \n    paper_bgcolor=\"#f5d9b2\",  \n    font=dict(family=\"Segoe UI\", size=14, color=\"#2b2b2b\"),\n    title_font=dict(size=22, color=\"#4b3832\"),\n    xaxis_title=\"Years of Experience\",\n    yaxis_title=\"Average Salary (USD)\",\n    legend_title=\"Education Group\",\n    hoverlabel=dict(bgcolor=\"white\", font_size=13, font_family=\"Arial\"),\n    margin=dict(t=70, b=60, l=60, r=60),\n    xaxis=dict(\n        gridcolor=\"#e0e0e0\",\n        tickmode=\"linear\",\n        dtick=1 \n    ),\n    yaxis=dict(gridcolor=\"#cccccc\")\n)\n\nfig5.show()\nfig.write_image(\"output/Q5.svg\", width=1000, height=600, scale=1)"
  },
  {
    "objectID": "assignment03-JulioVargasGarcia.html#explanation-of-box-plot-5",
    "href": "assignment03-JulioVargasGarcia.html#explanation-of-box-plot-5",
    "title": "Assignment 03",
    "section": "5.2 Explanation of Box Plot 5",
    "text": "5.2 Explanation of Box Plot 5\nThis chart shows pay versus experience split by how people work — blue is onsite, red is remote, green is hybrid. Most salaries bunch under 200k no matter the setup, but you can spot a few high outliers across all three."
  },
  {
    "objectID": "assignment03-JulioVargasGarcia_sol.html",
    "href": "assignment03-JulioVargasGarcia_sol.html",
    "title": "Assignment 03",
    "section": "",
    "text": "from pyspark.sql import SparkSession\nfrom pyspark.sql import functions as F\nfrom pyspark.sql.functions import col, split, explode, regexp_replace, transform, when\nfrom pyspark.sql.functions import col, monotonically_increasing_id\nfrom pyspark.sql.types import StructType  # to/from JSON\n\nimport json\nimport re\nimport numpy as np\nimport pandas as pd\n\nimport plotly.express as px\nimport plotly.io as pio\nimport plotly.graph_objects as go\n\n\nnp.random.seed(30)  # set a fixed seed for reproducibility\npio.renderers.default = \"vscode+notebook\"   #\n# Initialize Spark Session\nspark = SparkSession.builder.appName(\"JobPostingsAnalysis\").getOrCreate()\n# Load schema from JSON file\nwith open(\"data/schema_lightcast.json\") as f:\n    schema = StructType.fromJson(json.load(f))\n\n# Load Data\ndf = (spark.read\n      .option(\"header\", \"true\")\n      .option(\"inferSchema\", \"false\")\n      .schema(schema)              # saved schema\n      .option(\"multiLine\", \"true\")\n      .option(\"escape\", \"\\\"\")\n      .csv(\"data/lightcast_job_postings.csv\")\n      )\n\ndf.createOrReplaceTempView(\"job_postings\")\n# Show Schema and Sample Data\n#df.printSchema()  \ndf.show(5)\ndf.count()"
  },
  {
    "objectID": "assignment03-JulioVargasGarcia_sol.html#salary-distribution-by-industry-and-employment-type",
    "href": "assignment03-JulioVargasGarcia_sol.html#salary-distribution-by-industry-and-employment-type",
    "title": "Assignment 03",
    "section": "2.1 2.1 Salary Distribution by Industry and Employment Type",
    "text": "2.1 2.1 Salary Distribution by Industry and Employment Type\n\n#your code for first query\nimport pandas as pd\nimport polars as pl\nfrom IPython.display import display, HTML\n\n#2.2 Filter the dataset - Remove records where salary is missing or zero.\ndf_valid_salaries = df.filter(df[\"SALARY\"] &gt; 0).select(\"NAICS2_NAME\",\"EMPLOYMENT_TYPE_NAME\", \"SALARY\")\n\n#2.2 output - convert to pandas\npdf = df_valid_salaries.toPandas()\nprint(\"Data cleaning complete. Rows retained:\", len(pdf))\n\n#2.3 Aggregate data - NAICS industry codes, employment type and compute salary distribution.\n\n# Clean employment type names for better readability\npdf[\"EMPLOYMENT_TYPE_NAME\"] = (pdf[\"EMPLOYMENT_TYPE_NAME\"].astype(str)\n                               .str.replace(r\"[^\\x00-\\x7F]+\", \"\", regex=True)\n)\n\n#2.3 output\nmedian_salaries_naics = pdf.groupby(\"NAICS2_NAME\")[\"SALARY\"].median()\nmedian_salaries_employee = pdf.groupby(\"EMPLOYMENT_TYPE_NAME\")[\"SALARY\"].median()\ndisplay(median_salaries_naics.to_frame().head())\ndisplay(median_salaries_employee.to_frame().head())\n\n\n#2.4 Visualize results  box plot \n# X-axis = NAICS2_NAME || Y-axis = SALARY_FROM || Group by EMPLOYMENT_TYPE_NAME.\npdf = df.select(\"NAICS2_NAME\", \"SALARY\").toPandas()\nfig = px.box(pdf, x=\"NAICS2_NAME\", y=\"SALARY\", title=\"Salary Distribution by Industry\",\n             color_discrete_sequence=[\"#EF553B\"])\n                 # add nike template\n#fig.update_layout(template=\"nike\")\n\n#fig.update_xaxes(tickangle=45)\n\nfig.update_layout(\n    template=\"nike\",\n    height=700,\n    xaxis=dict(\n        title=dict(text=\"NAICS2_NAME\", standoff=40), \n        tickangle=45,\n        tickfont=dict(size=10),\n        automargin=True\n    ),\n    yaxis=dict(title=dict(text=\"Salary\")),\n    margin=dict(b=150)    \n        \n)\n\n\nfig.show()"
  }
]